{"version":3,"sources":["component/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoList","useState","todos","setTodos","inputValue","setInputValue","className","onSubmit","e","preventDefault","alert","type","value","onChange","target","placeholder","map","todo","index","onClick","filter","_","i","handleDelete","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAqDeA,G,MAlDE,WAAO,IAAD,EACKC,mBAAS,IADd,mBACdC,EADc,KACPC,EADO,OAEeF,mBAAS,IAFxB,mBAEdG,EAFc,KAEFC,EAFE,KAoBrB,OACE,qCACA,sBAAKC,UAAU,YAAf,UACE,2CACA,uBAAMC,SApBW,SAACC,GACpBA,EAAEC,iBAEGL,GAKLD,EAAS,GAAD,mBAAKD,GAAL,CAAYE,KACpBC,EAAc,KALZK,MAAM,iCAgBN,UACE,uBACEJ,UAAU,aACVK,KAAK,OACLC,MAAOR,EACPS,SAAU,SAACL,GAAD,OAAOH,EAAcG,EAAEM,OAAOF,QACxCG,YAAY,eAEd,wBAAQT,UAAU,MAAMK,KAAK,SAA7B,oBAEF,6BACGT,EAAMc,KAAI,SAACC,EAAMC,GAAP,OACT,+BACGD,EACD,wBAAQX,UAAU,SAASa,QAAS,kBAtBzB,SAACD,GACpBf,EAASD,EAAMkB,QAAO,SAACC,EAAGC,GAAJ,OAAUA,IAAMJ,MAqBYK,CAAaL,IAAvD,sBAFOA,WAOf,sBAAKZ,UAAU,SAAf,UACI,uEADJ,IAC6C,+BCpClCkB,MARf,WACE,OACE,qBAAKlB,UAAU,MAAf,SACE,cAAC,EAAD,OCMSmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.861ef6d6.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './TodoList.css';\r\n\r\nconst TodoList = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!inputValue) {\r\n      alert('Please type something to add');\r\n      return;\r\n    }\r\n\r\n    setTodos([...todos, inputValue]);\r\n    setInputValue('');\r\n  };\r\n\r\n  const handleDelete = (index) => {\r\n    setTodos(todos.filter((_, i) => i !== index));\r\n  };\r\n\r\n  return (\r\n    < >\r\n    <div className=\"todo-list\">\r\n      <h1>Todo List</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          className=\"todo-input\"\r\n          type=\"text\"\r\n          value={inputValue}\r\n          onChange={(e) => setInputValue(e.target.value)}\r\n          placeholder=\"Add a todo\"\r\n        />\r\n        <button className=\"add\" type=\"submit\">Add</button>\r\n      </form>\r\n      <ul>\r\n        {todos.map((todo, index) => (\r\n          <li key={index}>\r\n            {todo}\r\n            <button className=\"delete\" onClick={() => handleDelete(index)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n    <div className=\"footer\">\r\n        <footer>Made with ðŸ’• by Saurabh</footer> <br />\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React from 'react';\nimport TodoList from './component/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}